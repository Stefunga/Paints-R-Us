from tkinter import *
import tkinter as tk
import tkinter.messagebox
import sqlite3
import time

#Connecting to Paints-R-Us Database
connection = sqlite3.connect('PaintsRUs.db')
cursor = connection.cursor()

#Initially creating the database && ADDITIONS TO PaintsRUs.db
#cursor.execute('CREATE TABLE Employee (Id INTEGER PRIMARY KEY, Name TEXT, Password TEXT)')
#Inserts new row into Employee table
#cursor.execute('INSERT INTO Employee (Name, Password) VALUES ("Mike", "Hull")')
#cursor.execute('INSERT INTO Employee (Name, Password) VALUES ("Admin", "1234")')
#Selecting all values from the table
#cursor.execute('SELECT * FROM EMPLOYEE')
#Finalizes all changes made to the database permanently
#connection.commit()
#How to print retrieved info
#print(cursor.fetchall())

#Main class/UI for software
class PaintsMain:


    #Login Screen
    def __init__(self, master):
        #When submit button is clicked, Username and Password values are retrieved from 'PaintsRUs.db' to see if they exist
        def submit(event):
            time.sleep(.1)
            usernameValue = str(username.get())
            passwordValue = str(password.get())
            cursor.execute('SELECT 1 FROM EMPLOYEE WHERE Name = "' + usernameValue + '" AND Password = "' + passwordValue + '"')
            result = cursor.fetchall()
            if(str(result) == '[]'):#If user not found, error window appears
                tkinter.messagebox.showerror('Sign In Error', 'Incorrect Username or Password, Please try again')
            else:#If user found, the login frame is removeed and the main frame is loaded
                if(usernameValue == "Admin"):
                    time.sleep(.3)
                    loginFrame.destroy()
                    PaintsMain.managerScreen(master, usernameValue)
                else:
                    time.sleep(.3) #"Loading delay" of .3 seconds to slow transition
                    loginFrame.destroy()
                    PaintsMain.managerScreen(master, usernameValue)


        #Login frame build
        loginFrame = Frame(master, width = 300, height = 200)
        loginFrame.pack()

        #Don't allow the widgets inside to determine the frame's width / height
        loginFrame.pack_propagate(0)
        #frame.pack(fill=tk.BOTH, expand=1) #and expand frame to size

        #Creating all values for frame
        signLabel = Label(loginFrame, text="Please Sign In")
        nameLabel = Label(loginFrame, text="Username")
        passLabel = Label(loginFrame, text="Password")
        username = StringVar()
        nameEntry = Entry(loginFrame, textvariable = username)
        password = StringVar()
        passEntry = Entry(loginFrame, textvariable = password)
        passEntry.config(show="*");
        loginButton = Button(loginFrame, text="Login")
        loginButton.bind("<Button-1>", submit)

        #Attaching all values onto frame grid
        signLabel.grid(columnspan = 2)
        nameLabel.grid(row=1, sticky=E)
        passLabel.grid(row=2, sticky=E)
        nameEntry.grid(row=1, column=1)
        passEntry.grid(row=2, column=1)
        loginButton.grid(columnspan = 2)

    #Main Screen for Employees
    def employeeScreen(master, who):
        employeeFrame = Frame(master, width=300, height=200)
        employeeFrame.pack()
        testLabel = Label(employeeFrame, text="What would you like to do " + str(who) + "?")
        testLabel.pack()

    #Main Screen for Managers
    def managerScreen(master, who):
        managerFrame = Frame(master, width=300, height=200)
        managerFrame.pack()
        managerFrame.pack_propagate(0)
        questionLabel = Label(managerFrame, text="What would you like to do " + str(who) + "?")
        menuButton = Menubutton(managerFrame, text = "Choose a Screen")
        menuButton.menu = Menu(menuButton)
        menuButton["menu"] = menuButton.menu

        menuButton.menu.add_command(label="Customer Screen")
        menuButton.menu.add_command(label="Order Screen")
        if(who == "Admin"):
            menuButton.menu.add_command(label="Query Screen")

        questionLabel.pack()
        menuButton.pack()




#Creating window and calling PaintsMain class which initialized login window
root = Tk()
root.title('Paints R Us')
root.geometry("300x200")
root.resizable(0, 0)
b = PaintsMain(root)
root.mainloop()